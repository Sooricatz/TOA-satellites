<?php

/**
 * BaseVenue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $eventbrite_id
 * @property string $name
 * @property string $address
 * @property string $address2
 * @property string $city
 * @property string $region
 * @property integer $postal_code
 * @property string $country
 * @property string $country_code
 * @property float $longitude
 * @property float $latitude
 * @property Event $Event
 * 
 * @method integer getEventbriteId()  Returns the current record's "eventbrite_id" value
 * @method string  getName()          Returns the current record's "name" value
 * @method string  getAddress()       Returns the current record's "address" value
 * @method string  getAddress2()      Returns the current record's "address2" value
 * @method string  getCity()          Returns the current record's "city" value
 * @method string  getRegion()        Returns the current record's "region" value
 * @method integer getPostalCode()    Returns the current record's "postal_code" value
 * @method string  getCountry()       Returns the current record's "country" value
 * @method string  getCountryCode()   Returns the current record's "country_code" value
 * @method float   getLongitude()     Returns the current record's "longitude" value
 * @method float   getLatitude()      Returns the current record's "latitude" value
 * @method Event   getEvent()         Returns the current record's "Event" value
 * @method Venue   setEventbriteId()  Sets the current record's "eventbrite_id" value
 * @method Venue   setName()          Sets the current record's "name" value
 * @method Venue   setAddress()       Sets the current record's "address" value
 * @method Venue   setAddress2()      Sets the current record's "address2" value
 * @method Venue   setCity()          Sets the current record's "city" value
 * @method Venue   setRegion()        Sets the current record's "region" value
 * @method Venue   setPostalCode()    Sets the current record's "postal_code" value
 * @method Venue   setCountry()       Sets the current record's "country" value
 * @method Venue   setCountryCode()   Sets the current record's "country_code" value
 * @method Venue   setLongitude()     Sets the current record's "longitude" value
 * @method Venue   setLatitude()      Sets the current record's "latitude" value
 * @method Venue   setEvent()         Sets the current record's "Event" value
 * 
 * @package    toaberlin
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVenue extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('venue');
        $this->hasColumn('eventbrite_id', 'integer', 12, array(
             'type' => 'integer',
             'length' => 12,
             ));
        $this->hasColumn('name', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('address', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('address2', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('city', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('region', 'string', 16, array(
             'type' => 'string',
             'length' => 16,
             ));
        $this->hasColumn('postal_code', 'integer', 6, array(
             'type' => 'integer',
             'length' => 6,
             ));
        $this->hasColumn('country', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('country_code', 'string', 3, array(
             'type' => 'string',
             'length' => 3,
             ));
        $this->hasColumn('longitude', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('latitude', 'float', null, array(
             'type' => 'float',
             ));

        $this->option('charset', 'UTF8');
        $this->option('type', 'innodb');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'id',
             'foreign' => 'venue_id',
             'onDelete' => 'CASCADE'));
    }
}