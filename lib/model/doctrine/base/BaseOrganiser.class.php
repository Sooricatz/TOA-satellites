<?php

/**
 * BaseOrganiser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $eventbrite_id
 * @property string $name
 * @property string $description
 * @property string $url
 * @property Doctrine_Collection $Events
 * 
 * @method integer             getEventbriteId()  Returns the current record's "eventbrite_id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getDescription()   Returns the current record's "description" value
 * @method string              getUrl()           Returns the current record's "url" value
 * @method Doctrine_Collection getEvents()        Returns the current record's "Events" collection
 * @method Organiser           setEventbriteId()  Sets the current record's "eventbrite_id" value
 * @method Organiser           setName()          Sets the current record's "name" value
 * @method Organiser           setDescription()   Sets the current record's "description" value
 * @method Organiser           setUrl()           Sets the current record's "url" value
 * @method Organiser           setEvents()        Sets the current record's "Events" collection
 * 
 * @package    toaberlin
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrganiser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('organiser');
        $this->hasColumn('eventbrite_id', 'integer', 12, array(
             'type' => 'integer',
             'length' => 12,
             ));
        $this->hasColumn('name', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('description', 'string', 256, array(
             'type' => 'string',
             'length' => 256,
             ));
        $this->hasColumn('url', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));

        $this->option('charset', 'UTF8');
        $this->option('type', 'innodb');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Event as Events', array(
             'local' => 'id',
             'foreign' => 'organiser_id'));
    }
}