<?php

/**
 * BaseSpeaker
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $face
 * @property string $first_name
 * @property string $last_name
 * @property string $company_position
 * @property string $company
 * @property string $description
 * @property string $url
 * @property string $facebook
 * @property string $twitter
 * @property Doctrine_Collection $Programs
 * @property Doctrine_Collection $ProgramSpeakers
 * 
 * @method string              getFace()             Returns the current record's "face" value
 * @method string              getFirstName()        Returns the current record's "first_name" value
 * @method string              getLastName()         Returns the current record's "last_name" value
 * @method string              getCompanyPosition()  Returns the current record's "company_position" value
 * @method string              getCompany()          Returns the current record's "company" value
 * @method string              getDescription()      Returns the current record's "description" value
 * @method string              getUrl()              Returns the current record's "url" value
 * @method string              getFacebook()         Returns the current record's "facebook" value
 * @method string              getTwitter()          Returns the current record's "twitter" value
 * @method Doctrine_Collection getPrograms()         Returns the current record's "Programs" collection
 * @method Doctrine_Collection getProgramSpeakers()  Returns the current record's "ProgramSpeakers" collection
 * @method Speaker             setFace()             Sets the current record's "face" value
 * @method Speaker             setFirstName()        Sets the current record's "first_name" value
 * @method Speaker             setLastName()         Sets the current record's "last_name" value
 * @method Speaker             setCompanyPosition()  Sets the current record's "company_position" value
 * @method Speaker             setCompany()          Sets the current record's "company" value
 * @method Speaker             setDescription()      Sets the current record's "description" value
 * @method Speaker             setUrl()              Sets the current record's "url" value
 * @method Speaker             setFacebook()         Sets the current record's "facebook" value
 * @method Speaker             setTwitter()          Sets the current record's "twitter" value
 * @method Speaker             setPrograms()         Sets the current record's "Programs" collection
 * @method Speaker             setProgramSpeakers()  Sets the current record's "ProgramSpeakers" collection
 * 
 * @package    toaberlin
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSpeaker extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('speaker');
        $this->hasColumn('face', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('first_name', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('last_name', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('company_position', 'string', 96, array(
             'type' => 'string',
             'length' => 96,
             ));
        $this->hasColumn('company', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('description', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));
        $this->hasColumn('url', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('facebook', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('twitter', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));

        $this->option('charset', 'UTF8');
        $this->option('type', 'innodb');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Program as Programs', array(
             'refClass' => 'ProgramSpeaker',
             'local' => 'speaker_id',
             'foreign' => 'program_id'));

        $this->hasMany('ProgramSpeaker as ProgramSpeakers', array(
             'local' => 'id',
             'foreign' => 'speaker_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sortable0 = new Doctrine_Template_Sortable();
        $this->actAs($timestampable0);
        $this->actAs($sortable0);
    }
}