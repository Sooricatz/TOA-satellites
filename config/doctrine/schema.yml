# TOA Berlin database schema, maciej@canadel.ee
#
#  INFO:
#  - If the event has paid tickets, and the user already bought the main ticket, only the free tickets should be displayed
#    (dig around their API); probably do some user flag sayign "main ticket bought"
#
#  LATER:
#  - Optimize certain defined values basing on real world examples
#  - Add optimizations as notnulls, primary keys, indexes, etc.
options:
  charset:            UTF8
  type:               innodb


Category:
  columns:
    name:
      type: string(64)
  relations:
    Events:
      class:            Event
      local:            id
      foreign:          category_id
      type:             many


Organiser:
  columns:
    user_id:
      type: integer
    name:
      type: string(64)
    description:
      type: string(256)
    logo:
      type: string(128)
    url:
      type: string(128)
    twitter:
      type: string(128)
    facebook:
      type: string(128)

    synchronized:
      type: boolean
      default: false

    eventbrite_id:
      type: integer(16)

  relations:
    Events:
      class:    Event
      local:    id
      foreign:  organiser_id
      type:     many
    GuardUser:
      class:    sfGuardUser
      local:    user_id
      foreign:  id
      type:     one
      foreignType: one


Attendee:       # ** this is just a sub-class for sfGuardUser, since that object itself cannot be related many-to-many
  columns:
    user_id:
      type:     integer
      notnull:  true
    has_main_ticket:
      type:     boolean
      default:  false

  relations:
    GuardUser:
      class:    sfGuardUser
      local:    user_id
      foreign:  id
      type:     one
      foreignType: one


Ticket:
  actAs: 
    Timestampable: ~
  columns:
    event_id:
      type: integer
      notnull: true
    name:
      type: string(64)
    description:
      type: string(256)
    price:
      type: float
#    end_date:
#      type: timestamp          # ** we are going to use related Event's end date
    quantity_declared:
      type: integer(5)
      notnull: true
    quantity_paid:
      type: integer(5)
    quantity_free:
      type: integer(5)

    eventbrite_id:
      type: integer(16)
    eventbrite_hidden_id:
      type: integer(16)

  relations:
    Event:
      local:            event_id
      foreign:          id
      type:             one
      foreignType:      many
      foreignAlias:     Tickets
    Attendees:
      class:            Attendee
      refClass:         AttendeeTicket
      foreignAlias:     Tickets


AttendeeTicket:
  columns:
    attendee_id:
      type: integer
      notnull: true
    ticket_id:
      type: integer
      notnull: true

  relations:
    Ticket:
      foreignAlias: AttendeeTickets
    Attendee:
      foreignAlias: AttendeeTickets


Event:
  actAs:
    Timestampable: ~
  columns:
    category_id:
      type: integer
      notnull: true
    organiser_id:
      type: integer
      notnull: true
    title:
      type: string(64)
      notnull: true
    description:
      type: text
      notnull: true
    start_date:
      type: timestamp
    end_date:
      type: timestamp
    start_hour:
      type: time
      notnull: true
    end_hour:
      type: time
      notnull: true
    logo:
      type: string(128)
    listing_color:
      type: string(8)

    test:
      type: boolean
      default: false
    moderated:
      type: boolean
      default: false
    synchronized:
      type: boolean
      default: false

    venue_name:
      type: string(64)
    venue_address:
      type: string(128)
      notnull: true
    venue_city:
      type: string(32)
      notnull: true
    venue_postal_code:
      type: integer(6)
    venue_latitude:
      type: decimal(10,7)       # ** gmaps lat/lng sometimes need ever 15 places after coma
    venue_longitude:
      type: decimal(10,7)
    venue_eventbrite_id:
      type: integer(16)

    eventbrite_id:
      type: integer(16)
    eventbrite_hidden_id:
      type: integer(16)
    eventbrite_logo_url:
      type: string(128)
    eventbrite_created:         # FIXME we most likely don't need those two at all
      type: timestamp
    eventbrite_modified:
      type: timestamp

    # TODO: inject discount_id and discount_code for each event here
